I set 20 runs for each of those setups:

Setup 1:
  selection_strategy: "truncation"
  metric_dict.num_arcs.weight: 0
  metric_dict.sink_score.weight: 0

Setup 2:
  selection_strategy: "truncation"
  metric_dict.num_arcs.weight: 0
  metric_dict.sink_score.weight: 1

Setup 3:
  selection_strategy: "truncation"
  metric_dict.num_arcs.weight: 1
  metric_dict.sink_score.weight: 0

Setup 4:
  selection_strategy: "truncation"
  metric_dict.num_arcs.weight: 1
  metric_dict.sink_score.weight: 1

the best results of each setup are listed below:

-----
   setupname  run_nr  max_fitness  num_components  Exceptions
0    setup_1       1          1.0            1671       False
1    setup_1       2          1.0            1575       False
8    setup_1       9          1.0            1628       False
9    setup_1      10          1.0            1988       False
19   setup_1      20          1.0            1836       False
14   setup_1      15          1.0            1723       False
17   setup_1      18          1.0            1704       False
16   setup_1      17          1.0            1884       False
15   setup_1      16          1.0            1859       False
12   setup_1      13          1.0            1850       False

   setupname  run_nr  max_fitness  num_components  Exceptions
32   setup_2      13     1.000000            1994       False
34   setup_2      15     1.000000            1894       False
28   setup_2       9     1.000000            1981       False
27   setup_2       8     1.000000            1700       False
36   setup_2      17     1.000000            1790       False
38   setup_2      19     1.000000            2022       False
31   setup_2      12     0.926020            1763       False
21   setup_2       2     0.917722            1826       False
35   setup_2      16     0.906171            1478       False
22   setup_2       3     0.906167            1342       False

   setupname  run_nr  max_fitness  num_components  Exceptions
54   setup_3      15     0.933333            1934       False
49   setup_3      10     0.933333            1893       False
48   setup_3       9     0.933333            2010       False
47   setup_3       8     0.933333            1992       False
59   setup_3      20     0.933333            1917       False
56   setup_3      17     0.929777            1825       False
51   setup_3      12     0.910940            1801       False
50   setup_3      11     0.875253            1496       False
55   setup_3      16     0.871668            1632       False
40   setup_3       1     0.844455            1606       False

   setupname  run_nr  max_fitness  num_components  Exceptions
62   setup_4       3     0.941481            1971       False
78   setup_4      19     0.941481            1975       False
71   setup_4      12     0.936202            1973       False
60   setup_4       1     0.936202            2052       False
77   setup_4      18     0.936202            1937       False
63   setup_4       4     0.931628            2187       False
72   setup_4      13     0.927614            1940       False
67   setup_4       8     0.921199            2082       False
76   setup_4      17     0.884337            1895       False
66   setup_4       7     0.879718            1796       False
---

I then compared them, and it seems like the combination of both parameters (together with replay fit (2x weight) and over_enabled_trans) seems to steer the algo in the best directon. see attached image and onedrive link:
https://onedrive.live.com/view.aspx?resid=B817BF5365DA1DCD%2132553&id=documents&wd=target%28Coding.one%7CF257D180-8C74-4905-9AFC-A35306F02B47%2FCombining%20num%20arcs%20%26%20sink%20score%7C187B487D-5A40-4850-B68E-6E813C888638%2F%29
